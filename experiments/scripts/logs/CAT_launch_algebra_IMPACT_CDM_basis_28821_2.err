Loading pytorch-gpu/py3/2.7.0
  Loading requirement: gcc/11.4.1 cuda/12.6.3 nccl/2.25.1-1-cuda
    cudnn/9.5.1.17-cuda openmpi/4.1.6-cuda intel-mkl/2020.4 magma/2.9.0-cuda
    sox/14.4.2 hdf5/1.12.0-mpi-cuda libjpeg-turbo/2.1.3 ffmpeg/6.1.1
    openjdk/11.0.2
  0%|                                                                                                             | 0/25 [00:00<?, ?it/s]
  0%|                                                                                                           | 0/1000 [00:00<?, ?it/s][A
  0%|                                                                                                   | 1/1000 [00:01<19:34,  1.18s/it][A
  0%|▏                                                                                                  | 2/1000 [00:02<19:35,  1.18s/it][A
  0%|▎                                                                                                  | 3/1000 [00:02<11:40,  1.42it/s][A
  0%|▍                                                                                                  | 4/1000 [00:02<07:56,  2.09it/s][A
  0%|▍                                                                                                  | 5/1000 [00:02<05:52,  2.82it/s][A
  1%|▌                                                                                                  | 6/1000 [00:02<04:38,  3.57it/s][A
  1%|▋                                                                                                  | 7/1000 [00:03<03:50,  4.30it/s][A
  1%|▊                                                                                                  | 8/1000 [00:03<03:19,  4.96it/s][A
  1%|▉                                                                                                  | 9/1000 [00:03<04:05,  4.03it/s][A
  1%|▉                                                                                                 | 10/1000 [00:03<03:31,  4.68it/s][A
  1%|█                                                                                                 | 11/1000 [00:03<03:08,  5.24it/s][A
  1%|█▏                                                                                                | 12/1000 [00:03<02:51,  5.75it/s][A
  1%|█▎                                                                                                | 13/1000 [00:04<02:40,  6.13it/s][A
  1%|█▎                                                                                                | 14/1000 [00:04<02:33,  6.43it/s][A
  2%|█▍                                                                                                | 15/1000 [00:04<02:27,  6.67it/s][A
  2%|█▌                                                                                                | 16/1000 [00:04<03:27,  4.75it/s][A
  2%|█▋                                                                                                | 17/1000 [00:04<03:05,  5.30it/s][A
  2%|█▊                                                                                                | 18/1000 [00:04<02:49,  5.78it/s][A
  2%|█▊                                                                                                | 19/1000 [00:05<02:38,  6.21it/s][A
  2%|█▉                                                                                                | 20/1000 [00:05<02:30,  6.51it/s][A
  2%|██                                                                                                | 21/1000 [00:05<02:25,  6.75it/s][A
  2%|██▏                                                                                               | 22/1000 [00:05<02:20,  6.95it/s][A
  2%|██▎                                                                                               | 23/1000 [00:05<03:20,  4.88it/s][A
  2%|██▎                                                                                               | 24/1000 [00:05<02:59,  5.44it/s][A
  2%|██▍                                                                                               | 25/1000 [00:06<02:45,  5.90it/s][A
  3%|██▌                                                                                               | 26/1000 [00:06<02:34,  6.30it/s][A
  3%|██▋                                                                                               | 27/1000 [00:06<02:27,  6.59it/s][A
  3%|██▋                                                                                               | 28/1000 [00:06<02:23,  6.77it/s][A
  3%|██▊                                                                                               | 29/1000 [00:06<02:19,  6.96it/s][A
  3%|██▉                                                                                               | 30/1000 [00:07<03:16,  4.94it/s][A
  3%|███                                                                                               | 31/1000 [00:07<02:56,  5.49it/s][A
  3%|███▏                                                                                              | 32/1000 [00:07<02:42,  5.96it/s][A
  3%|███▏                                                                                              | 33/1000 [00:07<02:32,  6.35it/s][A  3%|███▏                                                                                              | 33/1000 [00:07<03:40,  4.38it/s]
100%|████████████████████████████████████████████████████████████████████████████████████████████████████| 25/25 [00:07<00:00,  3.27it/s]100%|████████████████████████████████████████████████████████████████████████████████████████████████████| 25/25 [00:07<00:00,  3.27it/s]
/lustre/fsn1/projects/rech/enh/unv34ei/MICAT/micat/selectionStrategy/abstract_selection_strategy.py:1267: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.detach().clone() or sourceTensor.detach().clone().requires_grad_(True), rather than torch.tensor(sourceTensor).
  results_pred = {metric: self.pred_metric_functions[metric](torch.tensor(preds), torch.tensor(meta_data['labels']), torch.tensor(nb_modalities)).cpu().item()
/lustre/fsn1/projects/rech/enh/unv34ei/MICAT/micat/selectionStrategy/abstract_selection_strategy.py:1267: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.detach().clone() or sourceTensor.detach().clone().requires_grad_(True), rather than torch.tensor(sourceTensor).
  results_pred = {metric: self.pred_metric_functions[metric](torch.tensor(preds), torch.tensor(meta_data['labels']), torch.tensor(nb_modalities)).cpu().item()
